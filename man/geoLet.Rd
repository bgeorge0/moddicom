% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/geoLet.R
\name{geoLet}
\alias{geoLet}
\title{class for loading and presenting DICOM data}
\usage{
geoLet(ROIVoxelMemoryCache = TRUE)
}
\description{
Instantiate an object of the class \code{geoLet}.This represents just the classname,
              for each instantiated object many methods are available, not in canonical S3 or S4.

              The available methods are:
              \itemize{
              \item \code{void openDICOMFolder(string pathToOpen)}
              is a method used to open a chosen folder. This method loads all the DICOM objects into
              the indicated folder (without recursion) as attribute of the object.
              Information can be retrieved using \code{getAttribute} method or
              more specific methods.
              \item \code{list/string/array getAttribute(string attribute,string seriesInstanceUID="",string fileName="")}
              Is a method used to get internal attributes. Allowed values fot \code{attributes} are:

              \itemize{
                \item \code{dataStorage} : return a structured list with all the information retrieved from the
                DICOM object in the folder. More detailed information about the structur of the returned list
                are available at <inserire link>
                \item \code{ROIPointList} : return the ROI point List for all the stored ROIs;
                \item \code{PatientName} : return the content of the (0010,0010) DICOM tag(*);
                \item \code{PatientID} : return the content of the (0010,0020) DICOM tag(*);
                \item \code{Rows} : return the content of the (0028,0010) DICOM tag(*);
                \item \code{Columns} : return the content of the (0028,0011) DICOM tag(*);
                \item \code{StudyDate} : return the content of the (0028,0011) DICOM tag(*);
                \item \code{Modality} : return the content of the (0008,0060) DICOM tag(*);
                \item \code{PatientSex} : return the content of the (0010,0040) DICOM tag(*);
                \item \code{SeriesInstanceUID} : return the content of the (0020,000e) DICOM tag(*);
                \item \code{SliceThickness} : return the content of the (0018,0050) DICOM tag(*);
                \item \code{ImagePositionPatient} : return the content of the (0020,0032) DICOM tag(*);
                \item \code{ImageOrientationPatient} : return the content of the (0020,0037) DICOM tag(*);
                \item \code{PixelSpacing} : return the content of the (0028,0030) DICOM tag(*);
              }

              (*) If no \code{seriesInstanceUID} or \code{filename} are provided, it returns the tag found in
              what seems to be the referencing CT or RMN scan. Pay attention to this point: in case of doubt about the
              content of the folder this can lead to errors.
              \item \code{string getDICOMTag(string fileName="",string tag) }
              it allows to retrieve the value of a specific DICOM tag on a specified DICOM filename. If the name is not
              indicated the method gets the first DICOM file he can find.
              \item  \code{matrix getROIList() }
              returns the list of the available ROIs
              \item \code{list getROIPointList(string ROINumber) }
              returns the list of the points which define the indicated ROI.
              \item \code{ void setAttribute(string attributeName,string attributeValue) }
              it sets the value of the specified attribute. The list of the availeable attributes is the following:
                 \itemize{
                   \item \code{verbose} : it define the policy adopted to print warnings and logs during computation. It is handled using an \code{errorHandler} object and works with three different levels. A list indicating the behaviour for each level should be provided.
                 }
              \item \code{list getFolderContent(string pathToOpen="") }
              explores the content of the given folder and returns informarion about the stored DICOM objects
              \item \code{getPixelSpacing()} it give back the pixelSpaxing along x,y,z of the image scan. Such information can also be obtained gy \code{getAttribute} but it is so common that this explicit method is provided.
              \item \code{cacheSave} : it forces to save che most expensive internal memory structure and drop by memory. Until a next \code{cacheLoad} will not be available. It is useful in order to use the memory 'on demand' instead of having everything load all the time.
              \item \code{cacheLoad} : it loads the most expensive internal memory structure from filesystem into memory. Pay attention because it override every possible previous content of such list.
              \item \code{cacheDrop} : it simply delete the most expensive internal memory structure withouth saving it on filesystem. It is useful if you have previously stored it and you didn't change it. So, in order to use the geoLet object you can simpli load che cache with the \code{cacheLoad} and then drop it without updating the cache on filesystem (in order to save time). Obviously it can be smarty used only if you didn't make any changes...
              \item \code{getAlignedStructureAndVoxelCube( double ps.x, double ps.y, double ps.z, string ROIName )} this function resample the image voxel cube and give back the interested ROI rotated on such cube ad adapted according with the new geometry. ps.x,y and z are optional: if not specified the normal pixel Spacing are used.
              }
}

